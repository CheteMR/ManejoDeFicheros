package ficheros;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;
import java.util.Scanner;

import com.csvreader.CsvWriter;

public class Main  {
	
	static Scanner sc = new Scanner(System.in);
	static final String NFICHERO = "articulos.dat";
	
	//@SuppressWarnings("unchecked")
	public static void main (String [] args) {
		
		int opcion;
		Articulos articulosAux; 
		DaoArticulos dA = new DaoArticulos();
		String idAux; 
		File fn = new File(NFICHERO); 
		
		if(fn.exists()) {
			try (FileInputStream fis = new FileInputStream(fn); ObjectInputStream ois = new ObjectInputStream(fis); ){
				
				dA.listaArticulos = (List<Articulos>) ois.readObject();
				
				System.out.println("Artículo leido");
				System.out.println("Imprimiendo Artítulos");
				
				for( Articulos a : dA.listaArticulos) {
					System.out.println(a);
				}
				
				
			}catch (FileNotFoundException e ) {
				e.printStackTrace();
				
			}catch (IOException e) {
				e.printStackTrace();
			}catch (ClassNotFoundException e) {
				e.printStackTrace();
			}
		}else
			System.out.println("El documento " +NFICHERO+ " no existe");
		
	do {
		opcion = menu (); 
		
		switch (opcion) {
		
		
		case 1: 
			articulosAux = new Articulos();
			
			System.out.println("Introduce el ID: ");
			articulosAux.setId(sc.next());
			
			System.out.println("Introduce el nombre: ");
			articulosAux.setNombre(sc.next());
			
			System.out.println("Introduce la descripcion: ");
			articulosAux.setDescripcion(sc.next());
			
			System.out.println("Introduce el stock del que se dispone: ");
			articulosAux.setStock(sc.next());
			

			System.out.println("Introduce el precio: ");
			articulosAux.setPrecio(sc.next());
			
			dA.añadirArticulos(articulosAux);
			break; 
			
		case 2: 
			System.out.println("Introduce el ID del Artículo que quieres dar de baja: " );
			idAux = sc.next();
			dA.borrarArticulos(idAux);
			break; 
			
		case 3: 
			System.out.println("Introduce el ID del Artículo que quieres buscar: ");
			idAux = sc.next();
			dA.buscarArticulo(idAux);
			break; 
			
		case 4: 
			for( Articulos a : dA.listaArticulos)
				System.out.println(a);
			break;
			
		case 5: 
			System.out.println("Unos segundos... descargando un archico CSV");
			extraerCSV(dA.listaArticulos);
			
		case 6:
			System.out.println("\nIntroduciendo los Artículos \n");
			
			try(FileOutputStream fos = new FileOutputStream(fn);
					ObjectOutputStream oos = new ObjectOutputStream(fos)){
				oos.writeObject(dA.listaArticulos);
				System.out.println("La aplicación se esta cerrando.");
			} catch (IOException e) {
				e.printStackTrace();
				System.out.println("Los datos no se han cargado");
			}
			break;
			
			default: 
				System.out.println("Escoge una opción correcta");
				break;
				
			}
	}while (opcion !=6);
	
	}
	
	public static int menu () {
		
		System.out.println("\n ITACACAMPER: FURGONETAS CAMPER PARA LOS MÁS AVENTUREROS \n");
		System.out.println("1. Añadir artículo");
		System.out.println("2. Dar de baja un artículo por ID");
		System.out.println("3. Obtener un artículo por ID");
		System.out.println("4. Listar todos los artículos");
		System.out.println("5. Descargar artículos a archivo CSV");
		System.out.println("6. Salir de la aplicación");
		int option = sc.nextInt();
		System.out.println("Has elegido la opción: " + option);
		return option;
	}
	
	public static void extraerCSV(List<Articulos> Articulos ) {
		String archCSV = "articulos.csv";
		File ch = new File(archCSV);
		if(ch.exists())
			ch.delete();
		
		try {
			
			CsvWriter salidaCSV = new CsvWriter(new FileWriter(archCSV, true), ';');
			
			salidaCSV.write("ID");
			salidaCSV.write("Nombre");
			salidaCSV.write("Descripcion");
			salidaCSV.write("Stock");
			salidaCSV.write("Precio");
					
			salidaCSV.endRecord();
			
			
			for (Articulos a : Articulos) {
				salidaCSV.write(a.getId());
				salidaCSV.write(a.getNombre());
				salidaCSV.write(a.getDescripcion());
				salidaCSV.write(a.getStock());
				salidaCSV.write(a.getPrecio());
				
				salidaCSV.endRecord();
			}

			salidaCSV.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

}
			
			
			
			

